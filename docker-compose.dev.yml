version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:?DB_NAME is required - copy backend/.env.example to backend/.env}
      - POSTGRES_USER=${DB_USER:?DB_USER is required - copy backend/.env.example to backend/.env}
      - POSTGRES_PASSWORD=${DB_PASSWORD:?DB_PASSWORD is required - copy backend/.env.example to backend/.env}
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    command: bash -c "sleep 5 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
    restart: on-failure

  frontend:
    build: ./frontend
    command: npm run dev -- --host
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend

  e2e:
    build: ./e2e
    command: npm run screenshot
    volumes:
      - ./screenshots:/screenshots
    network_mode: "service:frontend"
    depends_on:
      - frontend
      - backend
    profiles:
      - testing

volumes:
  postgres_data:
server {
    listen 80;
    server_name 72.60.208.226 yourdomain.com;

    # Force redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name 72.60.208.226 yourdomain.com;

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Modern SSL Configuration (2025 standards)
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # SSL Session Configuration
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # Permissions Policy (2025 standard)
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;

    # Certificate Transparency
    add_header Expect-CT "max-age=86400, enforce" always;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/h;
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

    # Request Size Limits
    client_max_body_size 10M;
    client_body_buffer_size 1M;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    # Timeouts
    client_body_timeout 10;
    client_header_timeout 10;
    keepalive_timeout 5 5;
    send_timeout 10;

    # Frontend
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;

        # Apply general rate limiting
        limit_req zone=general burst=20 nodelay;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # API Backend
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        # Apply API rate limiting
        limit_req zone=api burst=50 nodelay;

        # Login endpoint - stricter rate limiting
        location /api/auth/login/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            limit_req zone=login burst=2 nodelay;
        }

        # Timeout settings for API
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Disable buffering for SSE/WebSockets
        proxy_buffering off;

        # Security headers for API responses
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }

    # Static files
    location /static/ {
        alias /static/;
        expires 30d;
        add_header Cache-Control "public";

        # Deny access to sensitive files
        location ~* \.(env|git|htaccess|conf|ini|log|bak|backup|sql)$ {
            deny all;
            return 404;
        }
    }

    # Media files
    location /media/ {
        alias /media/;
        expires 7d;
        add_header Cache-Control "public";

        # Only allow specific file types
        location ~* \.(jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx)$ {
            # Allow
        }
        location ~ \.(php|php3|php4|php5|phtml|pl|py|pyc|pyo|sh|cgi|rb)$ {
            deny all;
            return 404;
        }
    }

    # Block access to hidden files and directories
    location ~ /\. {
        deny all;
        return 404;
    }

    # Block access to backup and source files
    location ~* \.(bak|backup|sql|old|orig|original|~)$ {
        deny all;
        return 404;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://backend:8000/api/health/;
        access_log off;
    }

    # Deny access to sensitive paths
    location ~* /(admin|wp-admin|phpmyadmin|pma|sql|backup|config) {
        deny all;
        return 404;
    }

    # Custom error pages
    error_page 403 /403.html;
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /403.html {
        root /usr/share/nginx/html;
        internal;
    }

    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Logging
    access_log /var/log/nginx/access.log combined buffer=32k;
    error_log /var/log/nginx/error.log warn;

    # Log security events
    access_log /var/log/nginx/security.log combined if=$security_event;

    # Define security event conditions
    map $request_uri $security_event {
        ~*(/\.|\.\.) 1;
        ~*(admin|config|backup) 1;
        ~*\.(sql|bak|old) 1;
        default 0;
    }
}